{"version":3,"sources":["algorithms/BubbleSort.js","algorithms/InsertionSort.js","components/Footer.jsx","components/AlgoButton.jsx","sortingLogo.png","components/Header.jsx","components/Controls.jsx","components/Bar.jsx","brain/BubbleBrain.jsx","brain/InsertBrain.jsx","components/AnimGround.jsx","CreatingArr.js","App.js","index.js"],"names":["arr","update","speed","setIsSorted","setInProgress","a","i","length","flag","j","flag1","temp","Promise","done","setTimeout","BubbleSort","value","InsertionSort","Footer","props","isSorted","inProcess","setInProcess","algoID","toast","position","POSITION","BOTTOM_RIGHT","autoClose","configure","className","style","textAlign","height","display","justifyContent","alignItems","onClick","backgroundColor","borderRadius","fontSize","fontWeight","AlgoButton","useState","onButton","setOnButton","clicked","setClicked","onMouseOver","onMouseOut","setAlgoImpl","id","marginLeft","name","sa","color","Header","selectedAlgo","setAlgo","src","logo","alt","paddingLeft","Controls","size","setSize","setSpeed","active","inactive","background","onChange","event","target","type","min","max","updateSpeed","Bar","index","heightFactor","Color","at","flexDirection","alignContent","width","marginBottom","BubbleBrain","translate","sizeFlag","sortedIndex","duration","translateX","easing","InsertBrain","insertionStates","f1","f2","f3","insertSI","scaleY","translateY","factor","AnimGround","states","map","BSI","selectBrain","createArray","push","Math","floor","random","App","setArr","setStates","bubbleSortedIndex","setBSI","insertStates","setInsertStates","setIsSortedImpl","setInProcessImpl","modifyArrBubble","array","w","x","y","flagg","selectAnimGround","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0cc47a7.chunk.js","sourcesContent":["\r\n\r\nasync function BubbleSort(arr, update, speed, setIsSorted, setInProgress) {\r\n\r\n    let flag;\r\n\r\n    let flag1;\r\n\r\n    for (let i = 1; i < arr.length; i++) {\r\n        flag = false;\r\n        for (let j = 0; j < arr.length - i; j++) {\r\n            flag1 = false;\r\n            if (arr[j] > arr[j + 1]) {\r\n                update(arr, i ,j, j+1, true);\r\n                let temp = arr[j];\r\n                arr[j] = arr[j + 1];\r\n                arr[j + 1] = temp;\r\n                flag = true;\r\n                flag1 = true;\r\n            }\r\n\r\n            if(!flag1) {\r\n                update(arr, i, j, j+1, false);\r\n            }\r\n\r\n            await new Promise(done => setTimeout(() => done(), speed));\r\n            update(arr, i, j, j+1, false);\r\n        }\r\n        if (!flag) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    update(arr, -1, -1, -1, false);\r\n    setIsSorted(true);\r\n    setInProgress(false);\r\n\r\n}\r\n\r\nexport default BubbleSort;","async function InsertionSort(arr, update, speed, setIsSorted, setInProgress){\r\n\r\n    /**\r\n     * Update Params:\r\n     * 1st -> array\r\n     * 2nd -> preceding element\r\n     * 3rd -> current element\r\n     * 4th -> Horizontal 0 / Only Vertical 1\r\n     * 5th -> Down 0 / Up 1\r\n     * 6th -> Without Animation 0 / With animation 1\r\n     * 7th -> No Swap False / Swap True\r\n     */\r\n\r\n    for(let i=1;i< arr.length;i++){\r\n        let value = arr[i];\r\n        let j = i-1;\r\n        update(arr, -1, j+1, 1, 0, 1, i,false);\r\n        await new Promise(done => setTimeout(() => done(), speed));\r\n        while(j>=0 && arr[j] > value){\r\n            update(arr, j, j+1, 0, 0, 0,i+1,true);\r\n            await new Promise(done => setTimeout(() => done(), speed));\r\n            arr[j+1] = arr[j];\r\n            arr[j] = value;\r\n            update(arr, -1, j, 1, 0, 0,i+1,false);\r\n            j--;\r\n        }\r\n        arr[j+1] = value;\r\n        update(arr, -1, j+1, 1, 1, 1, i+1,false);\r\n        await new Promise(done => setTimeout(() => done(), speed));\r\n        update(arr, -1, -1, -1, -1, -1, i+1,false);\r\n        // await new Promise(done => setTimeout(() => done(), speed));\r\n    }\r\n    update(arr, -1, -1, -1, -1, -1, -1,false);\r\n    setIsSorted(true);\r\n    setInProgress(false);\r\n\r\n}\r\n\r\nexport default InsertionSort;","import {toast} from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\nimport BubbleSort from \"../algorithms/BubbleSort\";\r\nimport InsertionSort from \"../algorithms/InsertionSort\";\r\n\r\nfunction Footer(props) {\r\n\r\n    // const [onAboutButton, setAboutOnButton] = useState(false);\r\n    //\r\n    // const [onTeamButton, setTeamOnButton] = useState(false);\r\n\r\n    let isSorted = props.isSorted;\r\n\r\n    let inProcess = props.inProcess;\r\n\r\n    // const[clicked, setClicked] = useState(false);\r\n\r\n    // function inAboutUs() {\r\n    //     setAboutOnButton(true);\r\n    // }\r\n    //\r\n    // function outAboutUs() {\r\n    //     setAboutOnButton(false);\r\n    // }\r\n    //\r\n    // function inTeam() {\r\n    //     setTeamOnButton(true);\r\n    // }\r\n    //\r\n    // function outTeam() {\r\n    //     setTeamOnButton(false);\r\n    // }\r\n    toast.configure();\r\n    async function setClickedImpl(){\r\n        if(!isSorted && !inProcess) {\r\n            // setClicked(isSorted);\r\n            props.setInProcess(true);\r\n            switch(props.algoID){\r\n                case 1:\r\n                    await BubbleSort(props.arr, props.update, props.speed, props.setIsSorted, props.setInProcess);\r\n                    break;\r\n                case 2:\r\n                    await InsertionSort(props.arr, props.update, props.speed, props.setIsSorted, props.setInProcess);\r\n                    break;\r\n                default:\r\n                    toast(\"Select an Algorithm\",{position:toast.POSITION.BOTTOM_RIGHT,autoClose:2000});\r\n                    props.setInProcess(false);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"footer\"} >\r\n\r\n            <div className={\"col\"} style={{textAlign: \"center\",height: \"100%\",display: \"flex\",justifyContent: \"center\", alignItems:\"center\"}}>\r\n                <button\r\n                    className={\"sortButton\"}\r\n                    onClick={setClickedImpl}\r\n                    style={{\r\n                        backgroundColor: inProcess || isSorted ? \"grey\" : \"limegreen\",\r\n                        borderRadius: \"10px\",\r\n                        fontSize: \"2.4vh\",\r\n                        fontWeight:500\r\n                    }}\r\n                >\r\n                    Sort!\r\n                </button>\r\n            </div>\r\n\r\n            {/*<div className={\"col-lg-4\"} style={{textAlign: \"end\"}}>*/}\r\n            {/*    <div className=\"row\">*/}\r\n            {/*        <div className=\"col offset-5\">*/}\r\n            {/*            <button className={\"rightFooterContents align-middle\"}*/}\r\n            {/*                    onMouseOver={inAboutUs}*/}\r\n            {/*                    onMouseOut={outAboutUs}*/}\r\n            {/*                    style={*/}\r\n            {/*                        {*/}\r\n            {/*                            color: onAboutButton && \"black\"*/}\r\n            {/*                        }*/}\r\n            {/*                    }*/}\r\n            {/*            >*/}\r\n            {/*                About*/}\r\n            {/*            </button>*/}\r\n            {/*        </div>*/}\r\n            {/*        <div className=\"col\">*/}\r\n            {/*            <button className={\"rightFooterContents align-middle\"}*/}\r\n            {/*                    onMouseOver={inTeam}*/}\r\n            {/*                    onMouseOut={outTeam}*/}\r\n            {/*                    style={*/}\r\n            {/*                        {*/}\r\n            {/*                            color: onTeamButton && \"black\"*/}\r\n            {/*                        }*/}\r\n            {/*                    }*/}\r\n            {/*            >*/}\r\n            {/*                Team*/}\r\n            {/*            </button>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import {useState} from \"react\";\r\n\r\nfunction AlgoButton(props){\r\n\r\n    const [onButton, setOnButton] = useState(false);\r\n\r\n    const[clicked, setClicked] = useState(false);\r\n\r\n    function inSubmit() {\r\n        setOnButton(true);\r\n    }\r\n\r\n    function outSubmit() {\r\n        setOnButton(false);\r\n    }\r\n\r\n    return(\r\n        <button className={\"algoButtons\"}\r\n                onMouseOver={inSubmit}\r\n                onMouseOut={outSubmit}\r\n                onClick={() => {\r\n                    setClicked(false);\r\n                    props.setAlgoImpl(-1);\r\n                    setClicked(true);\r\n                    props.setAlgoImpl(props.id);\r\n                }}\r\n                style={\r\n                    {\r\n                        marginLeft: props.name === \"Bubble Sort\" ?   \"auto\" : \"40px\",\r\n                        fontWeight:500,\r\n                        backgroundColor :\r\n                        clicked && (props.id === props.sa) ? \"#3BBF7D\" : (onButton ? \"#ff336a\" : \"black\"),\r\n                        color : onButton && \"black\"\r\n                    }\r\n                }>\r\n            {props.name}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default AlgoButton;","export default __webpack_public_path__ + \"static/media/sortingLogo.02a6098a.png\";","import AlgoButton from \"./AlgoButton\";\r\nimport {useState} from \"react\";\r\nimport logo from \"../../src/sortingLogo.png\";\r\n\r\nfunction Header(props) {\r\n\r\n    const [selectedAlgo, setAlgo] = useState(-1);\r\n\r\n    function setAlgoImpl(i) {\r\n        props.algoID(i);\r\n        setAlgo(i);\r\n    }\r\n\r\n    return (\r\n        <div className={\"head\"} style={{display: \"flex\"}}>\r\n            <img\r\n                src={logo}\r\n                alt=\"Logo\"\r\n                height={48}\r\n                style={{\r\n                    paddingLeft: \"27px\"\r\n                }}\r\n            />\r\n            <AlgoButton\r\n                name={\"Bubble Sort\"}\r\n                id={1}\r\n                sa={selectedAlgo}\r\n                setAlgoImpl={setAlgoImpl}\r\n            />\r\n            <AlgoButton\r\n                name={\"Insertion Sort\"}\r\n                id={2}\r\n                setAlgoImpl={setAlgoImpl}\r\n                sa={selectedAlgo}\r\n            />\r\n            <AlgoButton\r\n                name={\"Quick Sort\"}\r\n                id={3}\r\n                setAlgoImpl={setAlgoImpl}\r\n                sa={selectedAlgo}\r\n            />\r\n            <AlgoButton\r\n                name={\"Heap Sort\"}\r\n                id={4}\r\n                setAlgoImpl={setAlgoImpl}\r\n                sa={selectedAlgo}\r\n            />\r\n            <AlgoButton\r\n                name={\"Merge Sort\"}\r\n                id={5}\r\n                setAlgoImpl={setAlgoImpl}\r\n                sa={selectedAlgo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import {useState} from 'react';\r\n\r\nfunction Controls(props) {\r\n\r\n    const [size, setSize] = useState(10);\r\n\r\n    const [speed, setSpeed] = useState(810 - props.speed);\r\n\r\n    const [onButton, setOnButton] = useState(false);\r\n\r\n    let inProcess = props.inProcess;\r\n\r\n    const active = '#64c3ef'\r\n    const inactive = '#dbdbdb'\r\n\r\n    function inSubmit() {\r\n        setOnButton(true);\r\n    }\r\n\r\n    function outSubmit() {\r\n        setOnButton(false);\r\n    }\r\n\r\n    function setSizeImpl(event) {\r\n        if(!inProcess) {\r\n            let temp = event.target.value;\r\n            props.setIsSorted(false);\r\n            setSize(temp);\r\n            props.update(temp);\r\n        }\r\n    }\r\n\r\n    function setSpeedImpl(event) {\r\n        if(!inProcess) {\r\n            let temp = event.target.value;\r\n            setSpeed(temp);\r\n            props.updateSpeed(810 - temp);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='controls'>\r\n            <button\r\n                style={{\r\n                    backgroundColor: inProcess ? \"grey\" : onButton ? \"#ff336a\" : \"black\",\r\n                    color: inProcess ? \"black\" : onButton && \"black\",\r\n                    borderRadius: \"30px\",\r\n                    fontSize: \"2.4vh\",\r\n                    height: \"70%\",\r\n                    fontWeight:500,\r\n                }}\r\n                onMouseOver={inSubmit}\r\n                onMouseOut={outSubmit}\r\n                onClick={() => {\r\n                    if(!inProcess) {\r\n                        props.setIsSorted(false);\r\n                        props.update(size);\r\n                    }\r\n                }}\r\n                className=\"newArrayButton\">\r\n                Create Random Array\r\n            </button>\r\n            <div>\r\n                <label className='labels' style = {{fontSize: \"2.4vh\",fontWeight:500,}}>Array Size</label>\r\n                <input\r\n                    style={{\r\n                        background: !inProcess ? `linear-gradient(90deg, ${active} 0% ${(100/96) * (size - 4)}%, ${inactive} ${(100/96) * (size - 4)}% 100%)` : \"grey\"\r\n                    }}\r\n                    className={\"slider\"}\r\n                    onChange={setSizeImpl}\r\n                    type=\"range\" min=\"4\" max=\"100\" value={size}\r\n                    id=\"myRange\">\r\n                </input>\r\n            </div>\r\n            <div>\r\n                <label className='labels' style = {{fontSize: \"2.4vh\",fontWeight:500,}}>Speed</label>\r\n                <input\r\n                    style={{\r\n                        background:!inProcess ? `linear-gradient(90deg, ${active} 0% ${(10/79) * (speed - 10)}%, ${inactive} ${(10/79) * (speed - 10)}% 100%)` : \"grey\"\r\n                    }}\r\n                    onChange={setSpeedImpl}\r\n                       className={\"slider\"}\r\n                       type=\"range\" min=\"10\" max=\"800\" value={speed}\r\n                       id=\"myRange\">\r\n                </input>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Controls;","\r\nfunction Bar(props){\r\n\r\n    let arr = props.arr;\r\n    let index = props.index;\r\n    let heightFactor = props.heightFactor;\r\n    let size = arr.length;\r\n    let value = props.value;\r\n    let flag = props.flag;\r\n    let Color = props.Color; \r\n\r\n    // console.log(props);\r\n\r\n    return(\r\n        <div\r\n            key={index}\r\n            className={\"align-items-center\"}\r\n            style={\r\n                {\r\n                    height: arr.at(index) * heightFactor + 100,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignContent: \"center\",\r\n                }\r\n            }>\r\n\r\n            <div style={{\r\n                height: arr.at(index) * heightFactor + 50,\r\n                width: 1000 / size,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n            }}>\r\n                <div style={{\r\n                    height: arr.at(index) * heightFactor + 50,\r\n                    width: 6000 / (size * 7),\r\n                    backgroundColor: Color\r\n                }}>\r\n                    {!flag && <div>\r\n                        <p style={{marginBottom: \"0\"}}>{value}</p>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bar;","import Anime from 'react-anime';\r\nimport Bar from '../components/Bar';\r\nfunction BubbleBrain(index, value, i, j, flag, arr, heightFactor, size, translate, sizeFlag, speed, isSorted, sortedIndex) {\r\n    let color;\r\n\r\n    if (isSorted) {\r\n        color = \"lightBlue\";\r\n    } else if (sortedIndex > 1 && index > size - sortedIndex) {\r\n        color = \"#f9fb5a\";\r\n    } else {\r\n        if (index === i || index === j) {\r\n            color = \"#ff5e5e\"\r\n        } else {\r\n            color = \"lightgreen\";\r\n        }\r\n    }\r\n\r\n\r\n    if (index === i && flag) {\r\n        return (\r\n            <Anime duration={speed - 10} translateX={translate * (j - i)} easing={\"easeInOutQuad\"}>\r\n                <Bar\r\n                    Color={color}\r\n                    arr={arr}\r\n                    index={index}\r\n                    heightFactor={heightFactor}\r\n                    size={size}\r\n                    value={value}\r\n                    flag={sizeFlag}\r\n                />\r\n            </Anime>\r\n        )\r\n    } else if (index === j && flag) {\r\n        return (\r\n            <Anime duration={speed - 10} translateX={-translate * (j - i)} easing={\"easeInOutQuad\"}>\r\n                <Bar\r\n                    Color={color}\r\n                    arr={arr}\r\n                    index={index}\r\n                    heightFactor={heightFactor}\r\n                    size={size}\r\n                    value={value}\r\n                    flag={sizeFlag}\r\n                />\r\n            </Anime>\r\n        )\r\n    } else {\r\n        return (\r\n            <Bar\r\n                Color={color}\r\n                arr={arr}\r\n                index={index}\r\n                heightFactor={heightFactor}\r\n                size={size}\r\n                value={value}\r\n                flag={sizeFlag}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default BubbleBrain;","import Anime from 'react-anime';\r\nimport Bar from '../components/Bar';\r\n\r\nfunction InsertBrain(index, value, i, j, flag, insertionStates, arr, heightFactor, size, translate, sizeFlag, speed, isSorted) {\r\n    let {f1,f2,f3,insertSI} = insertionStates;\r\n    let color = isSorted ? \"lightBlue\" : index === i || index === j ? \"#ff5e5e\" : index<insertSI ? \"yellow\" :\"lightGreen\";\r\n\r\n    if (f1 === 1 && f2 === 0 && f3 === 1) {\r\n\r\n        if (index === j) {\r\n            return (\r\n                <Anime duration={speed - 10} scaleY={0.5} translateY={425} easing={\"easeInOutQuad\"}>\r\n                    <Bar\r\n                        Color={color}\r\n                        arr={arr}\r\n                        index={index}\r\n                        heightFactor={heightFactor}\r\n                        size={size}\r\n                        value={value}\r\n                        flag={sizeFlag}\r\n                    />\r\n                </Anime>\r\n            );\r\n        } else {\r\n            return (\r\n                <Bar\r\n                    Color={color}\r\n                    arr={arr}\r\n                    index={index}\r\n                    heightFactor={heightFactor}\r\n                    size={size}\r\n                    value={value}\r\n                    flag={sizeFlag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    else if (f1 === 0) {\r\n\r\n        if (index === i && flag) {\r\n            return (\r\n                <Anime duration={speed - 10} translateX={translate * (j - i)} easing={\"easeInOutQuad\"}>\r\n                    <Bar\r\n                        Color={color}\r\n                        arr={arr}\r\n                        index={index}\r\n                        heightFactor={heightFactor}\r\n                        size={size}\r\n                        value={value}\r\n                        flag={sizeFlag}\r\n                    />\r\n                </Anime>\r\n            )\r\n        }\r\n        else if (index === j && flag) {\r\n            return (\r\n                <Anime duration={0} scaleY={0.5} translateY={425} easing={\"easeInOutQuad\"}>\r\n                    <Anime duration={speed - 10} translateX={-translate * (j - i)} easing={\"easeInOutQuad\"}>\r\n                        <Bar\r\n                            Color={color}\r\n                            arr={arr}\r\n                            index={index}\r\n                            heightFactor={heightFactor}\r\n                            size={size}\r\n                            value={value}\r\n                            flag={sizeFlag}\r\n                        />\r\n                    </Anime>\r\n                </Anime>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Bar\r\n                    Color={color}\r\n                    arr={arr}\r\n                    index={index}\r\n                    heightFactor={heightFactor}\r\n                    size={size}\r\n                    value={value}\r\n                    flag={sizeFlag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    else if(f1 === 1 && f2 === 1 && f3 === 1){\r\n\r\n        let factor = 0.3 - (((100 - value) * 0.2)/100);\r\n\r\n        if(index === j){\r\n            return (\r\n                <Anime duration={0} scaleY={0.5} translateY={425} easing={\"easeInOutQuad\"}>\r\n                    <Anime duration={speed - 10} scaleY={2} translateY={-(360 - (425 * factor))} easing={\"easeInOutQuad\"}>\r\n                        <Bar\r\n                            Color={color}\r\n                            arr={arr}\r\n                            index={index}\r\n                            heightFactor={heightFactor}\r\n                            size={size}\r\n                            value={value}\r\n                            flag={sizeFlag}\r\n                        />\r\n                    </Anime>\r\n                </Anime>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Bar\r\n                    Color={color}\r\n                    arr={arr}\r\n                    index={index}\r\n                    heightFactor={heightFactor}\r\n                    size={size}\r\n                    value={value}\r\n                    flag={sizeFlag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    else {\r\n        return (\r\n            <Bar\r\n                Color={color}\r\n                arr={arr}\r\n                index={index}\r\n                heightFactor={heightFactor}\r\n                size={size}\r\n                value={value}\r\n                flag={sizeFlag}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default InsertBrain;","import Bar from './Bar';\r\nimport BubbleBrain from '../brain/BubbleBrain';\r\nimport InsertBrain from '../brain/InsertBrain';\r\n\r\nfunction AnimGround(props) {\r\n\r\n    let arr = props.arr;\r\n\r\n    let heightFactor = 350 / props.max;\r\n\r\n    let size = arr.length;\r\n\r\n    let translate = 1000 / size;\r\n\r\n    let sizeFlag = false;\r\n\r\n    let speed = props.speed;\r\n\r\n    let isSorted = props.isSorted;\r\n\r\n    let {i, j, flag} = props.states;\r\n\r\n    let algoID = props.algoID;\r\n\r\n    if (size > 30) {\r\n        sizeFlag = true;\r\n    }\r\n\r\n    function selectBrain(index, value, i, j, flag, algoID) {\r\n        switch (algoID) {\r\n            case 1:\r\n                return BubbleBrain(index, value, i, j, flag, arr, heightFactor, size, translate, sizeFlag, speed, isSorted, props.BSI);\r\n            case 2:\r\n                return InsertBrain(index, value, i, j, flag, props.insertionStates, arr, heightFactor, size, translate, sizeFlag, speed, isSorted);\r\n            default:\r\n                return <Bar\r\n                    Color=\"lightgreen\"\r\n                    arr={arr}\r\n                    index={index}\r\n                    heightFactor={heightFactor}\r\n                    size={size}\r\n                    value={value}\r\n                    flag={sizeFlag}\r\n                />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animContainer\">\r\n            <div className=\"anim align-content-center\">\r\n\r\n                {/*<Anime delay={anime.stagger(50)} scale={[ 0.0, 1 ]}>*/}\r\n                {arr.map((value, index) => {\r\n                        return (\r\n                            selectBrain(index, value, i, j, flag, algoID)\r\n                        );\r\n                    }\r\n                )\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AnimGround;","\r\nfunction createArray(size){\r\n\r\n    const arr = [];\r\n\r\n    for (let i=0;i<size;i++){\r\n        arr.push(Math.floor(Math.random() * 100) + 1);\r\n    }\r\n\r\n    return arr;\r\n\r\n}\r\n\r\nexport default createArray;","import Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport Controls from \"./components/Controls\";\r\nimport AnimGround from \"./components/AnimGround\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useState} from \"react\";\r\nimport createArray from \"./CreatingArr\";\r\n\r\nfunction App() {\r\n\r\n    const [arr, setArr] = useState(createArray(10));\r\n\r\n    const [speed, setSpeed] = useState(300);\r\n\r\n    const [states, setStates] = useState(\r\n        {\r\n            i: -1,\r\n            j: -1,\r\n            flag: false,\r\n        }\r\n    );\r\n\r\n    const [inProcess, setInProcess] = useState(false);\r\n\r\n    const [isSorted, setIsSorted] = useState(false);\r\n\r\n    const [selectedAlgo, setAlgo] = useState(-1);\r\n\r\n    const [bubbleSortedIndex, setBSI] = useState(-1);\r\n\r\n    const [insertStates, setInsertStates] = useState(\r\n        {\r\n            f1: -1,\r\n            f2: -1,\r\n            f3: -1,\r\n            insertSI: -1\r\n        }\r\n    );\r\n\r\n    function setAlgoImpl(i) {\r\n        setAlgo(i);\r\n    }\r\n\r\n    function setIsSortedImpl(flag) {\r\n        setIsSorted(flag);\r\n    }\r\n\r\n    function setInProcessImpl(flag) {\r\n        setInProcess(flag);\r\n    }\r\n\r\n\r\n    function updateArr(size) {\r\n        setArr(createArray(size));\r\n    }\r\n\r\n    function setSpeedImpl(speed) {\r\n        setSpeed(speed);\r\n    }\r\n\r\n    function modifyArrBubble(array, w, x, y, flagg) {\r\n        setArr([...array]);\r\n        setBSI(w);\r\n        setStates({\r\n            i: x,\r\n            j: y,\r\n            flag: flagg,\r\n        });\r\n        // console.log(w);\r\n    }\r\n\r\n    function modifyArrInsert(array, x, y, f1, f2, f3, insertSI,flagg){\r\n        setArr([...array]);\r\n        setStates({\r\n            i: x,\r\n            j: y,\r\n            flag: flagg,\r\n        });\r\n        setInsertStates(\r\n            {\r\n                f1: f1,\r\n                f2: f2,\r\n                f3: f3,\r\n                insertSI: insertSI,\r\n            }\r\n        )\r\n    }\r\n\r\n    function selectAnimGround(algoID){\r\n        switch(algoID){\r\n            case 1:\r\n                return <AnimGround\r\n                arr={arr}\r\n                max={max}\r\n                states={states}\r\n                speed={speed}\r\n                isSorted={isSorted}\r\n                algoID = {selectedAlgo}\r\n                BSI={bubbleSortedIndex}\r\n            />\r\n            case 2:\r\n                return <AnimGround\r\n                arr={arr}\r\n                max={max}\r\n                states={states}\r\n                speed={speed}\r\n                isSorted={isSorted}\r\n                algoID = {selectedAlgo}\r\n                insertionStates={insertStates}\r\n            />\r\n            default:\r\n                return <AnimGround\r\n                arr={arr}\r\n                max={max}\r\n                states={states}\r\n                speed={speed}\r\n                isSorted={isSorted}\r\n                algoID = {selectedAlgo}\r\n            />\r\n\r\n        }\r\n    }\r\n\r\n    let max = Math.max(...arr);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header\r\n                algoID={setAlgoImpl}/>\r\n            <Controls\r\n                update={updateArr}\r\n                speed={speed}\r\n                updateSpeed={setSpeedImpl}\r\n                inProcess={inProcess}\r\n                setInProcess={setInProcessImpl}\r\n                setIsSorted={setIsSortedImpl}\r\n            />\r\n            {selectAnimGround(selectedAlgo)}\r\n            <Footer\r\n                arr={arr}\r\n                update={selectedAlgo===1 ? modifyArrBubble : selectedAlgo===2 ? modifyArrInsert : modifyArrBubble}\r\n                speed={speed}\r\n                inProcess={inProcess}\r\n                setInProcess={setInProcessImpl}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSortedImpl}\r\n                algoID = {selectedAlgo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}